//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Airline_Registration_.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AirlineReservationSystemEntities : DbContext
    {
        public AirlineReservationSystemEntities()
            : base("name=AirlineReservationSystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Registration> Registrations { get; set; }
        public virtual DbSet<TicketInfo> TicketInfoes { get; set; }
        public virtual DbSet<CardDetail> CardDetails { get; set; }
    
        public virtual ObjectResult<spFlightSearch_Result> spFlightSearch(Nullable<System.DateTime> jdate, string sloc, string dloc)
        {
            var jdateParameter = jdate.HasValue ?
                new ObjectParameter("Jdate", jdate) :
                new ObjectParameter("Jdate", typeof(System.DateTime));
    
            var slocParameter = sloc != null ?
                new ObjectParameter("Sloc", sloc) :
                new ObjectParameter("Sloc", typeof(string));
    
            var dlocParameter = dloc != null ?
                new ObjectParameter("Dloc", dloc) :
                new ObjectParameter("Dloc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFlightSearch_Result>("spFlightSearch", jdateParameter, slocParameter, dlocParameter);
        }
    
        public virtual ObjectResult<FlightSearchNew_Result> FlightSearchNew(Nullable<System.DateTime> jdate, string sloc, string dloc)
        {
            var jdateParameter = jdate.HasValue ?
                new ObjectParameter("Jdate", jdate) :
                new ObjectParameter("Jdate", typeof(System.DateTime));
    
            var slocParameter = sloc != null ?
                new ObjectParameter("Sloc", sloc) :
                new ObjectParameter("Sloc", typeof(string));
    
            var dlocParameter = dloc != null ?
                new ObjectParameter("Dloc", dloc) :
                new ObjectParameter("Dloc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FlightSearchNew_Result>("FlightSearchNew", jdateParameter, slocParameter, dlocParameter);
        }
    
        public virtual ObjectResult<FlightSearchFinal_Result> FlightSearchFinal(Nullable<System.DateTime> jdate, string sloc, string dloc)
        {
            var jdateParameter = jdate.HasValue ?
                new ObjectParameter("Jdate", jdate) :
                new ObjectParameter("Jdate", typeof(System.DateTime));
    
            var slocParameter = sloc != null ?
                new ObjectParameter("Sloc", sloc) :
                new ObjectParameter("Sloc", typeof(string));
    
            var dlocParameter = dloc != null ?
                new ObjectParameter("Dloc", dloc) :
                new ObjectParameter("Dloc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FlightSearchFinal_Result>("FlightSearchFinal", jdateParameter, slocParameter, dlocParameter);
        }
    
        public virtual ObjectResult<FinalFlightSearch_Result> FinalFlightSearch(Nullable<System.DateTime> jdate, string sloc, string dloc)
        {
            var jdateParameter = jdate.HasValue ?
                new ObjectParameter("Jdate", jdate) :
                new ObjectParameter("Jdate", typeof(System.DateTime));
    
            var slocParameter = sloc != null ?
                new ObjectParameter("Sloc", sloc) :
                new ObjectParameter("Sloc", typeof(string));
    
            var dlocParameter = dloc != null ?
                new ObjectParameter("Dloc", dloc) :
                new ObjectParameter("Dloc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FinalFlightSearch_Result>("FinalFlightSearch", jdateParameter, slocParameter, dlocParameter);
        }
    
        public virtual int InsertTickets(Nullable<int> pid, Nullable<int> fnum, string pname, Nullable<int> cid, Nullable<int> pAge, Nullable<int> sno, Nullable<int> nooftickets, Nullable<int> amt, string gen)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var fnumParameter = fnum.HasValue ?
                new ObjectParameter("fnum", fnum) :
                new ObjectParameter("fnum", typeof(int));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var pAgeParameter = pAge.HasValue ?
                new ObjectParameter("pAge", pAge) :
                new ObjectParameter("pAge", typeof(int));
    
            var snoParameter = sno.HasValue ?
                new ObjectParameter("sno", sno) :
                new ObjectParameter("sno", typeof(int));
    
            var noofticketsParameter = nooftickets.HasValue ?
                new ObjectParameter("nooftickets", nooftickets) :
                new ObjectParameter("nooftickets", typeof(int));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(int));
    
            var genParameter = gen != null ?
                new ObjectParameter("gen", gen) :
                new ObjectParameter("gen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertTickets", pidParameter, fnumParameter, pnameParameter, cidParameter, pAgeParameter, snoParameter, noofticketsParameter, amtParameter, genParameter);
        }
    
        public virtual int InsertTicketDetail(Nullable<int> pid, Nullable<int> fnum, string pname, Nullable<int> cid, Nullable<int> pAge, Nullable<int> sno, Nullable<int> nooftickets, Nullable<int> amt, string gen)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var fnumParameter = fnum.HasValue ?
                new ObjectParameter("fnum", fnum) :
                new ObjectParameter("fnum", typeof(int));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var pAgeParameter = pAge.HasValue ?
                new ObjectParameter("pAge", pAge) :
                new ObjectParameter("pAge", typeof(int));
    
            var snoParameter = sno.HasValue ?
                new ObjectParameter("sno", sno) :
                new ObjectParameter("sno", typeof(int));
    
            var noofticketsParameter = nooftickets.HasValue ?
                new ObjectParameter("nooftickets", nooftickets) :
                new ObjectParameter("nooftickets", typeof(int));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(int));
    
            var genParameter = gen != null ?
                new ObjectParameter("gen", gen) :
                new ObjectParameter("gen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertTicketDetail", pidParameter, fnumParameter, pnameParameter, cidParameter, pAgeParameter, snoParameter, noofticketsParameter, amtParameter, genParameter);
        }
    
        public virtual int InsertTicketInformation(Nullable<int> pid, Nullable<int> fnum, string pname, Nullable<int> cid, Nullable<int> pAge, Nullable<int> sno, Nullable<int> nooftickets, Nullable<int> amt, string gen)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var fnumParameter = fnum.HasValue ?
                new ObjectParameter("fnum", fnum) :
                new ObjectParameter("fnum", typeof(int));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var pAgeParameter = pAge.HasValue ?
                new ObjectParameter("pAge", pAge) :
                new ObjectParameter("pAge", typeof(int));
    
            var snoParameter = sno.HasValue ?
                new ObjectParameter("sno", sno) :
                new ObjectParameter("sno", typeof(int));
    
            var noofticketsParameter = nooftickets.HasValue ?
                new ObjectParameter("nooftickets", nooftickets) :
                new ObjectParameter("nooftickets", typeof(int));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(int));
    
            var genParameter = gen != null ?
                new ObjectParameter("gen", gen) :
                new ObjectParameter("gen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertTicketInformation", pidParameter, fnumParameter, pnameParameter, cidParameter, pAgeParameter, snoParameter, noofticketsParameter, amtParameter, genParameter);
        }
    
        public virtual int InsertDetailsTicket(Nullable<int> pid, Nullable<int> fnum, string pname, Nullable<int> cid, Nullable<int> pAge, Nullable<int> sno, Nullable<int> nooftickets, Nullable<int> amt, string gen)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var fnumParameter = fnum.HasValue ?
                new ObjectParameter("fnum", fnum) :
                new ObjectParameter("fnum", typeof(int));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var pAgeParameter = pAge.HasValue ?
                new ObjectParameter("pAge", pAge) :
                new ObjectParameter("pAge", typeof(int));
    
            var snoParameter = sno.HasValue ?
                new ObjectParameter("sno", sno) :
                new ObjectParameter("sno", typeof(int));
    
            var noofticketsParameter = nooftickets.HasValue ?
                new ObjectParameter("nooftickets", nooftickets) :
                new ObjectParameter("nooftickets", typeof(int));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(int));
    
            var genParameter = gen != null ?
                new ObjectParameter("gen", gen) :
                new ObjectParameter("gen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertDetailsTicket", pidParameter, fnumParameter, pnameParameter, cidParameter, pAgeParameter, snoParameter, noofticketsParameter, amtParameter, genParameter);
        }
    
        public virtual int InsertTicketInformation1(Nullable<int> pid, Nullable<int> fnum, string pname, Nullable<int> cid, Nullable<int> pAge, Nullable<int> sno, Nullable<int> nooftickets, Nullable<int> amt, string gen)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var fnumParameter = fnum.HasValue ?
                new ObjectParameter("fnum", fnum) :
                new ObjectParameter("fnum", typeof(int));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var pAgeParameter = pAge.HasValue ?
                new ObjectParameter("pAge", pAge) :
                new ObjectParameter("pAge", typeof(int));
    
            var snoParameter = sno.HasValue ?
                new ObjectParameter("sno", sno) :
                new ObjectParameter("sno", typeof(int));
    
            var noofticketsParameter = nooftickets.HasValue ?
                new ObjectParameter("nooftickets", nooftickets) :
                new ObjectParameter("nooftickets", typeof(int));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(int));
    
            var genParameter = gen != null ?
                new ObjectParameter("gen", gen) :
                new ObjectParameter("gen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertTicketInformation1", pidParameter, fnumParameter, pnameParameter, cidParameter, pAgeParameter, snoParameter, noofticketsParameter, amtParameter, genParameter);
        }
    
        public virtual int PostInsert(Nullable<int> pid, Nullable<int> fnum, string pname, Nullable<int> cid, Nullable<int> pAge, Nullable<int> sno, Nullable<int> nooftickets, Nullable<int> amt, string gen)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var fnumParameter = fnum.HasValue ?
                new ObjectParameter("fnum", fnum) :
                new ObjectParameter("fnum", typeof(int));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var pAgeParameter = pAge.HasValue ?
                new ObjectParameter("pAge", pAge) :
                new ObjectParameter("pAge", typeof(int));
    
            var snoParameter = sno.HasValue ?
                new ObjectParameter("sno", sno) :
                new ObjectParameter("sno", typeof(int));
    
            var noofticketsParameter = nooftickets.HasValue ?
                new ObjectParameter("nooftickets", nooftickets) :
                new ObjectParameter("nooftickets", typeof(int));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(int));
    
            var genParameter = gen != null ?
                new ObjectParameter("gen", gen) :
                new ObjectParameter("gen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PostInsert", pidParameter, fnumParameter, pnameParameter, cidParameter, pAgeParameter, snoParameter, noofticketsParameter, amtParameter, genParameter);
        }
    
        public virtual int InsertUserTicket(Nullable<int> pid, Nullable<int> fnum, string pname, Nullable<int> cid, Nullable<int> pAge, Nullable<int> sno, Nullable<int> nooftickets, Nullable<int> amt, string gen)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var fnumParameter = fnum.HasValue ?
                new ObjectParameter("fnum", fnum) :
                new ObjectParameter("fnum", typeof(int));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var pAgeParameter = pAge.HasValue ?
                new ObjectParameter("pAge", pAge) :
                new ObjectParameter("pAge", typeof(int));
    
            var snoParameter = sno.HasValue ?
                new ObjectParameter("sno", sno) :
                new ObjectParameter("sno", typeof(int));
    
            var noofticketsParameter = nooftickets.HasValue ?
                new ObjectParameter("nooftickets", nooftickets) :
                new ObjectParameter("nooftickets", typeof(int));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(int));
    
            var genParameter = gen != null ?
                new ObjectParameter("gen", gen) :
                new ObjectParameter("gen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUserTicket", pidParameter, fnumParameter, pnameParameter, cidParameter, pAgeParameter, snoParameter, noofticketsParameter, amtParameter, genParameter);
        }
    
        public virtual ObjectResult<Payment_Result> Payment(Nullable<int> pid)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Payment_Result>("Payment", pidParameter);
        }
    
        public virtual ObjectResult<Search_Result> Search(Nullable<System.DateTime> jdate, string sloc, string dloc)
        {
            var jdateParameter = jdate.HasValue ?
                new ObjectParameter("Jdate", jdate) :
                new ObjectParameter("Jdate", typeof(System.DateTime));
    
            var slocParameter = sloc != null ?
                new ObjectParameter("Sloc", sloc) :
                new ObjectParameter("Sloc", typeof(string));
    
            var dlocParameter = dloc != null ?
                new ObjectParameter("Dloc", dloc) :
                new ObjectParameter("Dloc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Search_Result>("Search", jdateParameter, slocParameter, dlocParameter);
        }
    
        public virtual ObjectResult<Tickets_Result> Tickets(Nullable<int> pid, string pname, Nullable<int> age)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tickets_Result>("Tickets", pidParameter, pnameParameter, ageParameter);
        }
    
        public virtual ObjectResult<DisplayTicket_Result> DisplayTicket(Nullable<int> pid, Nullable<int> age)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisplayTicket_Result>("DisplayTicket", pidParameter, ageParameter);
        }
    
        public virtual ObjectResult<Seats_Result> Seats(Nullable<int> fnum)
        {
            var fnumParameter = fnum.HasValue ?
                new ObjectParameter("fnum", fnum) :
                new ObjectParameter("fnum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Seats_Result>("Seats", fnumParameter);
        }
    
        public virtual ObjectResult<SeatsAvailable_Result> SeatsAvailable(Nullable<int> fnumber)
        {
            var fnumberParameter = fnumber.HasValue ?
                new ObjectParameter("fnumber", fnumber) :
                new ObjectParameter("fnumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SeatsAvailable_Result>("SeatsAvailable", fnumberParameter);
        }
    }
}
